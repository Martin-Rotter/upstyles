upbase.sty
==========

- klikaci indexovana slova (viz \IN, \INEM), barva cervenohneda (?)
MR - myslite to tak ze slova v TEXTU, ktera oindexuju budou klikaci a
zavedou me do rejstriku nebo "naopak" tedy ze po kliku na slovo v
rejstriku me to zavede na zdroj, asi prvni moznost myslim, to dava
smysl, uvodni implementace pridana
JO - ano, prvni moznost, druha (po kliku na cislo strany) je
standardne, ale u \index mel by zustat jen jeden parametr (indexovane
slovo), jen se vysazi jako odkaz
MR - Nevím, jak to bylo ve starých stylech, todle není jednoduché
docílit. Aby byl indexovaný termín klikací, tak je třeba zajistit dvě
věci:
  1. Je třeba mít string, který bude textem odkazu, tedy onen
indexovaný termín.
  2. Je třeba mít název pro samotný odkaz, který bude umístěn do
rejstříku, na tento odkaz následně náš klikací string povede.
Oba stringy nejsou shodné, protože pokud název odkaz obsahuje mezery a
podobné znaky, tak mi to házi chybu. Takže dva parametry jsou potřeba.
Navíc ony dva parametry ani nestaší. Co v případě zanořených
indexovaných položek \index{literatura!historická}. Tohle musíme
domyslet.
Originální \index má jeden argument. Ten se vezme, přeformátuje a hodí
do rejstříku, do místa volání se následně vloží "label" a na ten se
odkáže s rejstříku, tohle je navíc specifikum balíku hyperref. Bez něj
dělá index, zdá se, zase něco trošku jinak.
!! Osobně si myslím, že klikací indexové položky v textu nemají valný
use-case. Od toho jsou klikací v samotném rejstříku. Úplně bych to
vyhodil a vrátil se k tomu později. Je riziko, že bych toho víc
rozbil, než vylepšil. I ta aktuální klikací implementace je děrava a
nepodporuje právě to vnořování například !!
JO - ve starych stylech to nebylo, tam byl udelany klikaci jen ten
standardni smer (z rejstriku na stranu se slovem), ale myslim, ze by
to nemelo byt tak narocne, co treba jednoduse (od slova neodvozeny)
label INDEX#i, kde #i by byla hodnota counteru (ve starych stylech je
INDEX#p, kde #p je cislo strany), parametr (termin, v rejstriku) se
predava cely, libovolne slozity (!,@,| aj.), puvodnimu makru \index,
ne? vase aktualni implementace ty slozitejsi parametry nepodporuje,
protoze ten parametr prave pouzivate pro label a ! asi v labelu vadi
jinak ano, klikaci indexovana slova v textu nejsou zas az tak
uzitecna, v podstate mi jde spis jen o zvyrazneni tech slov, idealne
oramovanim jen v prohlizeci jako u odkazu z hyperref (proto proc to
neudelat rovnou jako odkaz), aby bylo videt, ze to slovo je indexovane
MR - MATE PRAVDU, nechapu že v texu nedokážu přemýšlet programátorsky,
reimplementoval jsem to dle vaší idey, pro název interního labelu se
nyní použije maska ##ind.ind kde ## je číslo z extra counteru indexno,
nyní vše funguje, nicméně myšlenku musime ještě dotahnout, v
originalnim makru \index se totiž nic netiskne na výstup, v našem
makru \index se tiskne ten jediný argument na výstup + se udělá
klikacím, jenže co když bude někdo i tak chtít udělat třeba
\index{dopravní prostředek!auto!motorové}, to znamená vnořené indexy,
to s jedním argumentem v našem \indexu zkrátka neudělá, za podmínky,
že chceme zachovat to, že náš index bude tisknout (což bude muset),
možná bych původní index nechal byt a naše makro pojmenoval \upindex,
s tím že bude mít dva argumenty \upindex{kod-indexu}{zastupny-text},
tedy třeba \upindex{auto!motorové}{motorové auto}.
UPDATE: tak dynamický counter být taky nemůže, protože, když uživatel
následně v textu použije například dvakrát \index{auto}, tak se
vytvoří DVA záznamy v rejstříku, namísto jednoho zaznamu s dve odkazy.
JO - taky jsem si uvedomil, ze originalni \index nic netiskne, dobre,
nebudeme tisknout parametr \index (heslo v rejstriku), ale cislo z
toho counteru, klikaci, pri pouziti \index hned za indexovanym
terminem (napsat do dokumentace), podobne jako treba citace do seznamu
literatury, to muze byt napr. v {} (citace byvaji v [] nebo ()), napr.
indexovany termin{10}, nejake zvyrazneni indexovanych terminu bude
(bude za nimi {cislo}) a jeste to bude mit bonus v tom, ze uzivatel
bude videt, kolik jich ma, to by melo fungovat i se slozitejsimi
(vnorenymi) hesly, protoze parametr se nebude pouzivat, jen predavat
originalnimu \index
dva zaznamy do rejstriku to dava asi proto, ze za heslem je vysledek
\hypertarget s ruznymi cisly a on to cele bere jako dve ruzna hesla ->
prozkoumejte pouziti | za heslem, tj. heslo|\hypertarget, to by melo
jit, ale mohl by byt problem, pokud | pouzije i uzivatel, tj. otazka
je, zda-li je mozne pouzit | vicekrat, pokud ne, tak kdyz to pouzije
uzivatel, bude se to muset nejak zjistit a pridat \hypertarget k jeho
kodu za |
MR - s | mi to bohužel nefunguje, a navic jsem koukal do zdrojáků
byliku hyperref, konkretně makro hyperindexformat (ten obstarava usek
parametru za |, a ani to nemuze fungovat, prostě komplet argument z
\index{###}, tedy ### se celý (přetransformovaný) vždy narve do makra
\indexentry, to se objevi v souboru .idx, odkud se v prubehu kompilace
narve do vysledku, dosahnout klikacich, ta prvni cast navrhu: tedy
tisknout misto parametru index jen čislo je super, ale nema smysl jej
pridavat pokud nevyresime prave tento problem
JO - me to funguje, hyperref z \index{heslo|makro} dela
\indexentry{heslo|hyperindexformat{\makro}}{strana}, cili v parametru
makra \index hyperref nekde zjistuje |, takze (podobne jako je udelane
napr. |see{jine}): \orgindex{#1|hypertarget{\arabic{indexno}ind.ind}},
akorat kdyz uzivatel take pouzije |, napr. \index{heslo|makro}, my to
rozsirime na heslo|makro|hypertarget{...}, ale hyperref preda makru
\hyperindexformat jen to za prvnim |, tzn. jen \makro, cili pro reseni
(odkazu) budeme muset udelat to, co dela nekde hyperref, tzn. v
redefinici \index zjistit | a redefinovat \hypertarget s provedenim
toho, co dela \hyperindexformat, jen bez tvorby odkazu, anebo
\hypertarget zabalit do makra napr. \odkaz[2]{\hypertarget{#1}{#2}} a
uzivateli do dokumentace napsat, ze pokud chce pouzit |makro a pritom
mit odkaz, at si (re)definuje \makro s pouzitim \odkaz (nebo obracene
+ pouziti puvodniho \odkaz), stejne, jako by to musel udelat, pokud
bych chtel napr. oboji |textbf i |see{}
MR - dobře a co tedy makra pojmenovat \index (originalni index} a \upindex (náš index), případně projdu zdrojak originalniho indexu a zjistim jak tam delaji to parsovani

- proc redefinujete \url pomoci \href?
MR - Už ani přesně nevím, tuším, že to \url interně používá biblatex a
ten příkaz není z hyperrefu a neumí tuším zalamovat odkazy, takže to
často přetíká v bibliografiích generovaných biblatexem. Makro \href
umí lépe pracovat právě s těmi zlomy, ikdyž i tady je to obecně
problém a vyžaduje to trošku citu od uživatele. S tím se nedá nic moc
dělat.
JO - OK, ano, s tim pretekanim, to jsem uz asi pozoroval taky

! seznam literatury stejny z BibLaTeXu (podle normy) a rucne
(nastylovat thebibliography a bibitem): prijmeni velkymi pismeny ->
jen prvni pismeno velke, odsazeni dalsich radku polozky vpravo ->
neodsazene, cisla polozek nalevo (mimo) od leveho okraje textu ->
odsazeni cele polozky vpravo tak, aby cisla nebyla mimo, cisla do
hranatych zavorek
MR - prostředí thebibliography je nastylováno podle starého upstyles,
pokud se nepletu, jak nastylovat bibitem opravdu netuším, vždyť
bibitem se přeci používá právě proto, že tam mam 100% svobodu v tom,
jak si naformátuju ten daný záznam, zahrnutý BibLatexový styl již je
podle ISO 690 (https://github.com/michal-h21/biblatex-iso690),
jakékoliv úpravy v něm budu reportovat autorovy, kterého znám,
přijmení podle ISO 690 má být kapitálkami, další opravy nahlásím
autorovi
JO - thebibliography nemusi byt podle stareho stylu, nyni jde o to,
aby seznam byl nastylovany stejne jako z BibLaTeXu (podle normy),
bibitem se nestyluje, mate pravdu, ve vzorovem dokumentu dame par
polozek nastylovanych stejne jako z BibLaTeXu (s poznamkou, ze je to
prave podle normy), dale ano, prijmeni ma byt podle normy kapitalkami,
takze OK, ale to odsazeni dalsich radku polozky a cisla vlevo mimo
okraj textu bych prosil odstranit (parametr block baliku biblatex?),
cisla v [] byt nemusi, pokud norma rika i to, jak ma vypadat to
cislovani
v examplu biblatex-iso690 je backend=biber, nedame biber misto bibtex,
kdyz uz to mame tak moderni? tridi vubec BibTeX spravne UTF?
MR - přepnul jsem na biber, zbytek věcí nahlásím autorovi balíku,
přepinac block se stara o mezery mezi castmi zaznamu, to je trosku
neco jineho
JO - OK
MR - předsazování prvních řádků bibliografie vypnuto, do číslování
záznamu přidána tečka
JO - prvni radek u polozek s jednocifernym cislem OK, ale u
dvoucifernych je vice vpravo (zarovnana vlevo jsou cisla, ne prvni
radky textu polozek), "Dostupny take z WWW" neni zarovnane (vycniva
vlevo)
cisla polozek mimo levy okraj nechame (jsou tak i cisla radku
zdrojaku), ale pokud norma nerika, jak maji vypadat, tak je dame do []
a bez tecky (tak, jak jsou sazeny citace v textu)
MR - nahlásím problemy autorovi, opravil jsem odsazovani dvoucifernych
cisel a opravil jsem i ten format
JO - az na to "Dostupny take z" OK
MR - ok, ohledne "Dostupny tak z" kontaktuji autora, vypada to že to
dela jen tady u toho konkretniho rezezce

! v obsahu a PDF zalozkach je 'Bibliografie/Bibliography', ale nadpis
je 'Literatura/References', dejte vsude to druhe (je to podle normy?) 
MR - to je ale feature, ne bug, originální bib(la)tex to taky tak
dělá, norma neříká jaký nadpis má mít seznam použítích citací
JO - feature je, ze v obsahu a zalozkach je neco jineho nez nadpis te
sekce??
MR - ano, skutečně, tohle je feature. latex pro to má dokonce dvě makra, \bibname (nadpis bibliografie), \refname (název bibliografie v odkazech, záložkách, ...), \contentsname (nazev bibliografie v obsahu), a pokud se nepletu, pak skutečně mají ty makra různé počáteční stringy,
ale opravím to, je fakt, že to může být poněkud matoucí, pokud se podivat do upbase.sty, tak vidíte, že ta makra nikde neredefinuji
MR - opraveno

! vety a spol. jsou cislovane sekcne, zatimco tabulky a zdrojaky (a
obrazky?) globalne, dejte globalne i ty vety a spol.
MR - věty/důkazy atp předělány globálně. rozmyslete se, zda chcete, aby všechy ty typy vět sdílely čítač,
mě se zdá divné když v seznamu vět je

1 Lemma........
1 Věta.......
1 Příklad........
2 Příklad..........
2 Věta..........

Všechny typy vět teda ted sdílí counter. Takže v obsahu bude:

1 Lemma........
2 Věta.......
3 Příklad........
4 Příklad..........
5 Věta..........

To se mi zdá lepší.

updiplom.sty
============

! vzorovy dokument jako README k pouziti stylu
MR - dost jsem pokročil.

uppaper.sty
===========

upsimple.sty -> uppaper.sty
MR - ted se soustředím na updiplom, viz vaše poslední emaily (23.2.2013)
JO - ano, vim, az dodelame updiplom, tak podle nej opravite upsimple

! top=2.0cm, bottom=1.0cm, width=1.15\textwidth
MR - proč tak málo? vždyť původní styl má marginy o dost větší :)
provedl jsem zde drobné korekce, je třeba řešit hlavně offset na
vázání práce
JO - upsimple muze mit mensi marginy, bude na mene "oficialni" prace,
napr. zapoctove, semestralni, projektove apod.

! \bigskip mezi nadpisem abstraktu a abstraktem

! sazba na lichou stranu (\cleardoublepage): abstrakt, obsah

! \vfill pred logem na titulni strane misto \vspace{3em}

*.tex
=====

- je mozne pouziti maker \title, \author, \field, \supervisor,
\annotation, \maketitle, \printbibliography nebo prostredi
thebibliography a prostredi upconclusions vynutit, tj. aby v dokumentu
vzdy musely byt, jinak chyba?
MR - je to nutné? v examplu všechno toto napíšu, opravdu bych
předpokládal alespoň základní schopnost invence a dedukce u uživatelů
:)
JO - tak dobre, snad nic z toho nenapadne studenty odstranit :-)
